cd ../examples/context/ && ../../enc --help
Usage: enc [OPTIONS] [INPUT_FILE]

Arguments:
  [INPUT_FILE]  path to the english language file to transpile

Options:
  -o, --output-file <OUTPUT_FILE>
          path to the output file
      --provider <PROVIDER>
          language model API provider: "google", "anthropic", or "openai" [env: PROVIDER=]
      --model <MODEL>
          model to use for inference [env: MODEL=]
      --max-tokens <MAX_TOKENS>
          maximum number of tokens for the LLM to generate [env: MAX_TOKENS=]
      --thinking-budget <THINKING_BUDGET>
          maximum tokens for deep thought [env: THINKING_BUDGET=1024]
      --seed <SEED>
          seed used for inference (empty means random) [env: SEED=]
      --hacking-conventions <HACKING_CONVENTIONS>
          coding conventions and style guide [env: HACKING_CONVENTIONS=] [default: ./HACKING.md]
      --timeout <TIMEOUT>
          timeout for API requests in seconds [env: TIMEOUT=]
      --context-files <CONTEXT_FILES>
          additional file paths to include as context (colon separated) [env: CONTEXT_FILES=]
      --gemini-api-key <GEMINI_API_KEY>
          google gemini API key
      --anthropic-api-key <ANTHROPIC_API_KEY>
          anthropic API key
      --openai-api-key <OPENAI_API_KEY>
          openAI API key
      --openai-api-base <OPENAI_API_BASE>
          openAI compatible API base url [env: OPENAI_API_BASE=http://localhost:7860/v1]
      --logs-path <LOGS_PATH>
          path to store API logs [env: LOGS_PATH=]
      --resources-path <RESOURCES_PATH>
          path to resources (pricing, language map, templates) [env: RESOURCES_PATH=]
      --show-config
          show the consolidated configuration and exit
  -h, --help
          Print help
  -V, --version
          Print version
cd ../examples/context/ && ../../enc --show-config
{
  "anthropic_api_key": "[REDACTED]",
  "context_files": [],
  "gemini_api_key": "[REDACTED]",
  "hacking_conventions": "./HACKING.md",
  "input_file": "",
  "logs_path": "./log/",
  "max_tokens": null,
  "model": "gemini-2.5-pro",
  "openai_api_base": "http://localhost:7860/v1",
  "openai_api_key": "[REDACTED]",
  "output_file": "",
  "provider": "google",
  "resources_path": [
    "./res/",
    "${XDG_DATA_HOME}/enc/res/"
  ],
  "seed": 15849869058455360884,
  "thinking_budget": 1024,
  "timeout": 1800,
  "user_provided_seed": false
}
cd ../examples/context/ && ../../enc main.en -o main.py --context-files context.txt
debug log path: ./log/20250626_202548.log
provider: google, model: gemini-2.5-pro
transpiling 'main.en' to 'main.py' (python)
successfully transpiled 'main.py'

--- api cost summary ---
tokens: 308 input, 147 output, 1930 thinking
estimated cost:
  - input   : $0.000385
  - output  : $0.001470
  - thinking: $0.019300
total: $0.021155
cd ../examples/context/ && python main.py
the answer to the meaning of life, the universe and everything
